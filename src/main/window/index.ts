import { BrowserWindow } from "electron";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

/** 主窗口创建 */
let mainWindow: BrowserWindow | null = null

export const createMainWindow = (): BrowserWindow => {
  // Create the browser window.
  mainWindow = new BrowserWindow({
    height: 700,
    width: 1050,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      nodeIntegration: true,
    },
    resizable: false,
    frame: false,
  });

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Open the DevTools.
  mainWindow.webContents.openDevTools();

  // mainWindow.webContents.session.webRequest.onBeforeSendHeaders((details, callback) => {
  //   /**
  //    * local
  //    */
  //   const requestHeaders = details.requestHeaders;
  //   if(requestHeaders['Origin']?.startsWith("http://localhost")) {
  //     requestHeaders['Origin'] = undefined;
  //   }
  //   if(requestHeaders['Referer']?.startsWith("http://localhost")) {
  //     requestHeaders['Referer'] = undefined;
  //   }

  //   callback({
  //     requestHeaders
  //   })
  // })
  return mainWindow;
};

export const getMainWindow = () => mainWindow;

